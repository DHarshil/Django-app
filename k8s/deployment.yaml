apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pv-claim
spec:
  #storageClassName: hostpath
  accessModes: 
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: volume-cm
data:
  app.env: |
    DJANGO_DEBUG=0
    ALLOWED_HOSTS=*
    READINESS_DELAY=10
  gunicorn.conf.py: |
    workers = 2
    threads = 2
    timeout = 60
---
apiVersion: v1
kind: Secret
metadata:
  name: my-secret
stringData:
  DB_USERNAME: myuser
  DB_PASSWORD: mysecurepassword
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: django-app
  name: django-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: django-app
  template:
    metadata:
      labels:
        app: django-app
    spec:
      volumes:
      - name: volume-pv
        persistentVolumeClaim: 
          claimName: pv-claim
      - name: volume-emptydir
        emptyDir:
          sizeLimit: 500Mi
      - name: volume-cm
        configMap:
          name: volume-cm
          items:
          - key: app.env
            path: app.env
          - key: gunicorn.conf.py
            path: gunicorn.conf.py
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
        runAsGroup: 1000
      containers:
      - image: dharshil10/django-app:v4
        name: django-app-01
        imagePullPolicy: Always
        env:
        - name: DB_USERNAME
          valueFrom:
            secretKeyRef:
              name: my-secret
              key: DB_USERNAME
        - name: DB_PASSWORD  
          valueFrom:
            secretKeyRef:
              name: my-secret
              key: DB_PASSWORD
        ports:
        - containerPort: 8000
        resources:
          requests:
            cpu: "250m"
            memory: "128Mi"
          limits:
            cpu: "500m"
            memory: "256Mi"
        volumeMounts:
        - name: volume-pv
          mountPath: /usr/src/app/data
        - name: volume-emptydir
          mountPath: /usr/src/app/logs
        - name: volume-cm
          mountPath: /usr/src/app/configs
          readOnly: true
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
      - image: dharshil10/django-app:v4
        name: django-app-02
        imagePullPolicy: Always
        ports:
        - containerPort: 8001
        resources:
          requests:
            cpu: "250m"
            memory: "128Mi"
          limits:
            cpu: "500m"
            memory: "256Mi"
        volumeMounts:
        - name: volume-pv
          mountPath: /usr/src/app/data
        - name: volume-emptydir
          mountPath: /usr/src/app/logs
        - name: volume-cm
          mountPath: /usr/src/app/configs
          readOnly: true
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true